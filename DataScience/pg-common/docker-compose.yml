version: "3.8"

volumes:
  esdata:
    driver: local
  kibanadata:
    driver: local

networks:
  default:
    name: elastic
    external: false

services:
  es:
    image: docker.resaa.net/elasticsearch:${STACK_VERSION}
    container_name: es
    labels:
      co.elastic.logs/module: elasticsearch
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    mem_limit: ${ES_MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: docker.resaa.net/kibana:9.1.5
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://192.168.21.81:9200
    ports:
      - "5601:5601"
    volumes:
      - kibanadata:/usr/share/kibana/data
    depends_on:
      - es

  nifi:
    container_name: nifi
    image: docker.resaa.net/apache/nifi:1.27.0
    environment:
      NIFI_WEB_HTTP_PORT: "8080"
    ports:
      - "8080:8080"

  airflow:
    image: docker.resaa.net/apache/airflow:3.1.1
    container_name: airflow
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
      AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX: 'true'
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: airflow
      _AIRFLOW_WWW_USER_PASSWORD: airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8081:8080"
    command: >
      bash -c "
      airflow db upgrade &&
      airflow users create --username airflow --firstname admin --lastname admin
      --role Admin --email admin@example.com --password airflow &&
      airflow webserver &
      airflow scheduler
      "
    # restart: always
    user: "${AIRFLOW_UID:-50000}:0"

  postgres:
    image: docker.resaa.net/postgres:16.10-alpine3.22
    container_name: db
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - ./data/pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s